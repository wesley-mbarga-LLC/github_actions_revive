name: Compose Stack Pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: compose-${{ github.ref }}
  cancel-in-progress: true

env:
  COMPOSE_FILE_CI: docker-compose.yml

jobs:
  build:
    name: Build (validate & pull)
    runs-on: repo-build
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Validate docker-compose file
        run: docker compose -f "$COMPOSE_FILE_CI" config

      - name: Pre-pull service images
        run: docker compose -f "$COMPOSE_FILE_CI" pull --ignore-pull-failures

  test:
    name: Test (spin & smoke)
    runs-on: linux
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Start stack
        run: docker compose -f "$COMPOSE_FILE_CI" up -d

      - name: List running containers
        run: docker ps --format 'table {{.Names}}\t{{.Status}}\t{{.Ports}}'

      - name: Smoke tests (UI & Catalog endpoints)
        shell: bash
        run: |
          set -e
          attempt() { n=$1; shift; for i in $(seq 1 "$n"); do if "$@"; then echo "✅ Success"; return 0; fi; echo "⏳ retry $i/$n"; sleep 5; done; return 1; }
          attempt 30 bash -lc 'curl -fsS http://localhost:9971/ >/dev/null'
          attempt 30 bash -lc 'curl -fsS http://localhost:8081/ >/dev/null'
          echo "--- UI (first lines) ---"
          curl -s http://localhost:9971/ | head -n 5 || true
          echo "--- Catalog (first lines) ---"
          curl -s http://localhost:8081/ | head -n 5 || true

      - name: Dump container logs on failure
        if: failure()
        run: docker compose -f "$COMPOSE_FILE_CI" logs --no-color

      - name: Teardown stack
        if: always()
        run: docker compose -f "$COMPOSE_FILE_CI" down -v

  deploy:
    name: Deploy (compose up -d)
    runs-on: repo-deploy
    needs: test
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Pull latest images
        run: docker compose -f "$COMPOSE_FILE_CI" pull --ignore-pull-failures

      - name: Deploy stack
        run: docker compose -f "$COMPOSE_FILE_CI" up -d

      - name: Show deployed containers
        run: docker ps --format 'table {{.Names}}\t{{.Status}}\t{{.Ports}}'
